#include "PresidentialPardonForm.hpp"

////////////////////////////////////////////////////////////////////////////////
// Constructors and destructor
////////////////////////////////////////////////////////////////////////////////
PresidentialPardonForm::PresidentialPardonForm( void ) : AForm("Default_Pardon", 25, 5)
{
	_target = "Default";
}

PresidentialPardonForm::PresidentialPardonForm(std::string target) : AForm(target + "_Pardon", 25, 5)
{
	_target = target;
}

PresidentialPardonForm::PresidentialPardonForm(const PresidentialPardonForm &obj) : AForm(obj._target + "_Pardon", 25, 5)
{
	*this = obj;
}


PresidentialPardonForm::~PresidentialPardonForm( void )
{

}


////////////////////////////////////////////////////////////////////////////////
// Getters and setters
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// Operators
////////////////////////////////////////////////////////////////////////////////
PresidentialPardonForm	&PresidentialPardonForm::operator=(const PresidentialPardonForm &obj)
{
	if (this == &obj)
		return (*this);
	_target = obj._target;
	return (*this);
}


////////////////////////////////////////////////////////////////////////////////
// Public methods
////////////////////////////////////////////////////////////////////////////////

void	PresidentialPardonForm::execute(Bureaucrat const & executor) const
{
	AForm::execute(executor);
	this->pardon();
}

void	PresidentialPardonForm::pardon() const
{
	std::cout << _target << " has been pardoned by Zaphod Beeblebrox." << std::endl;
}

////////////////////////////////////////////////////////////////////////////////
// Private methods
////////////////////////////////////////////////////////////////////////////////
