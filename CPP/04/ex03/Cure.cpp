#include "Cure.hpp"

////////////////////////////////////////////////////////////////////////////////
// Constructors and destructor
////////////////////////////////////////////////////////////////////////////////
Cure::Cure( void ) : AMateria("cure")
{

}


Cure::Cure(const Cure &obj)
{
	*this = obj;
}


Cure::~Cure( void )
{

}


////////////////////////////////////////////////////////////////////////////////
// Getters and setters
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// Operators
////////////////////////////////////////////////////////////////////////////////
Cure	&Cure::operator=(const Cure &obj)
{
	if (this == &obj)
		return (*this);
	this->AMateria::type = obj.AMateria::type;
	return (*this);
}


////////////////////////////////////////////////////////////////////////////////
// Public methods
////////////////////////////////////////////////////////////////////////////////

AMateria*	Cure::clone() const
{
	AMateria *new_cure = new Cure(*this);
	return (new_cure);
}

void	Cure::use(ICharacter& target)
{
	std::cout << "* heals " << target.getName() << "'s wounds *" << std::endl;
}

////////////////////////////////////////////////////////////////////////////////
// Private methods
////////////////////////////////////////////////////////////////////////////////
