#include "AMateria.hpp"

////////////////////////////////////////////////////////////////////////////////
// Constructors and destructor
////////////////////////////////////////////////////////////////////////////////
AMateria::AMateria( void )
{
	type = "none";
}

AMateria::AMateria(std::string const & type)
{
	this->type = type;
}

AMateria::AMateria(const AMateria &obj)
{
	(void) obj;
}


AMateria::~AMateria( void )
{

}


////////////////////////////////////////////////////////////////////////////////
// Getters and setters
////////////////////////////////////////////////////////////////////////////////

std::string const & AMateria::getType() const
{
	return (type);
}

void	AMateria::setType(std::string const & type)
{
	this->type = type;
}


////////////////////////////////////////////////////////////////////////////////
// Operators
////////////////////////////////////////////////////////////////////////////////
AMateria	&AMateria::operator=(const AMateria &obj)
{
	if (this == &obj)
		return (*this);
	this->type = obj.type;
	return (*this);
}


////////////////////////////////////////////////////////////////////////////////
// Public methods
////////////////////////////////////////////////////////////////////////////////

void AMateria::use(ICharacter& target)
{
	std::cout << "* Nothing to attack " << target.getName() << " *" << std::endl;
}

////////////////////////////////////////////////////////////////////////////////
// Private methods
////////////////////////////////////////////////////////////////////////////////
